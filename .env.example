###############################
# .env 配置示例（中文说明）  #
###############################

# 必填：Gemini 服务基础地址与版本。默认指向官方 API，如你使用自建代理/镜像，请改为你的网关地址。
# 例如：GEMINI_BASE_URL=https://your-proxy.example.com
GEMINI_BASE_URL=https://generativelanguage.googleapis.com
GEMINI_API_VERSION=v1beta

# 可选但强烈建议：全局 API Key。若你在每个模型别名下单独配置了 API Key，可留空。
GEMINI_API_KEY=

# 服务器监听地址与端口（可选）。
HOST=0.0.0.0
PORT=8000

# 兼容接口版本：用于 GET /api/version 返回的版本号（可按 IDE 期望值修改）
OLLAMA_VERSION=0.1.32

# 日志配置（可选）：
# LOG_LEVEL=INFO/DEBUG/WARN/ERROR，默认 INFO；
# LOG_JSON=true 输出 JSON 日志；
# LOG_MAX_BODY=1000 控制日志中请求体/响应体最大截断长度。
LOG_LEVEL=INFO
LOG_JSON=false
LOG_MAX_BODY=1000

# 必填（若需要 /api/tags 列表或多模型）：声明模型别名，逗号分隔。
# 这些别名会在 /api/tags 中显示，同时 /api/chat|/api/generate 的 model 字段可填写别名。
MODELS=gemini15pro,flash

# 以下为“模型别名”对应的具体配置。命名规则：MODEL_<ALIAS>_*
# 注意：<ALIAS> 会被自动大写，并将 - . : / 转换为 _

# 别名 gemini15pro -> 实际 Gemini 模型 ID（必填）
MODEL_GEMINI15PRO_ID=gemini-1.5-pro
# 使用全局 Key（可选），若单独设定请填写具体值
MODEL_GEMINI15PRO_API_KEY=${GEMINI_API_KEY}
# 基础地址与版本（可选），不填则继承全局
MODEL_GEMINI15PRO_BASE_URL=https://generativelanguage.googleapis.com
MODEL_GEMINI15PRO_API_VERSION=v1beta
# 展示名称与描述（可选），仅用于 /api/tags 展示
MODEL_GEMINI15PRO_DISPLAY_NAME=Gemini 1.5 Pro
MODEL_GEMINI15PRO_DESCRIPTION=高质量，多模态

# 别名 flash -> 实际 Gemini 模型 ID（必填）
MODEL_FLASH_ID=gemini-1.5-flash
# 单独 Key（可选），若留空则使用全局 GEMINI_API_KEY
MODEL_FLASH_API_KEY=
# 如有专属代理地址可配置（可选）
MODEL_FLASH_BASE_URL=https://generativelanguage.googleapis.com
MODEL_FLASH_API_VERSION=v1beta
MODEL_FLASH_DISPLAY_NAME=Gemini 1.5 Flash
MODEL_FLASH_DESCRIPTION=更快，更便宜

# 使用说明（重要）：
# 1) 若你只需要一个默认模型且不需要 /api/tags，可仅设置全局 GEMINI_BASE_URL/GEMINI_API_VERSION/GEMINI_API_KEY，
#    并在请求中直接使用具体模型 ID（例如 gemini-1.5-pro）。
# 2) 若你需要 /api/tags 或通过别名管理多个模型，请至少：
#    - 设置 MODELS
#    - 为每个别名设置 MODEL_<ALIAS>_ID（必填）
#    - 其余如 *_API_KEY/*_BASE_URL/*_API_VERSION 根据需要覆盖（可选）
# 3) 也可在请求头单次覆盖：X-Gemini-Base-Url / X-Gemini-Api-Version / X-Gemini-Api-Key。

# 启动命令
# python -c "from app.main import run; run()"
